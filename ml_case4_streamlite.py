# -*- coding: utf-8 -*-
"""ML_Case4_Streamlite.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xcnGXx5S2kCUGV8UHTcU6KINkMUn8E_L
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib
#from sklearn.ensemble import RandomForestRegressor


#Loading up the Regression model we created
#regressor=RandomForestRegressor(n_estimators =1100,min_samples_split=2,min_samples_leaf=2,max_features='log2',max_depth=20,criterion ='friedman_mse')

model = joblib.load('rf_random.joblib')
#Caching the model for faster loading
@st.cache

# Define the prediction function
def predict(Present_Price, Kms_Driven, Owner, YearofMake, Fuel_Type, Seller_Type_Individual, Transmission_Type):
    if Fuel_Type == 'Petrol':
        Fuel_Type_Diesel = 0
        Fuel_Type_Petrol = 1
    elif Fuel_Type == 'Diesel':
        Fuel_Type_Diesel = 1
        Fuel_Type_Petrol = 0
    elif Fuel_Type == 'Other':
        Fuel_Type_Diesel = 0
        Fuel_Type_Petrol = 0
    if Transmission_Type == 'Transmission_Manual':
        Transmission_Manual = 1
    elif Transmission_Type == 'Transmission_Automatic':
        Transmission_Manual = 0
    elif Transmission_Type == 'Other':
        Transmission_Manual = 2
    no_year = 2021 - YearofMake
    df = pd.DataFrame([[Present_Price, Kms_Driven, Owner, no_year, Fuel_Type_Diesel, Fuel_Type_Petrol, Seller_Type_Individual, Transmission_Manual]], columns=['Present_Price', 'Kms_Driven', 'Owner', 'YearofMake','Fuel_Type_Diesel', 'Fuel_Type_Petrol', 'Transmission_Manual'])
    prediction = model.predict(df)
    return prediction


st.title('Second Hand Car Sales Price Prediction')
st.image("""https://images.livemint.com/img/2020/09/16/1600x900/carsales-koVB--621x414@LiveMint_1600277936612.jpg""")
st.header('Enter the Information of the Car:')
Present_Price = st.number_input('Present_Price:', min_value=10000, max_value=10000000, value=10000)
Kms_Driven = st.number_input('Kms_Driven:', min_value=0, max_value=10000000, value=10000)
Owner = st.number_input('Owner:', min_value=0, max_value=3, value=1)
YearofMake = st.number_input('YearofMake:', min_value=1900, max_value=2024, value=2021)
Fuel_Type = st.radio('Fuel_Type:', ('Petrol', 'Diesel', 'Other'))
Seller_Type_Individual = st.number_input('Seller_Type_Individual:', min_value=0, max_value=1, value=1)
Transmission_Type = st.radio('Transmission_Type:', ('Transmission_Manual', 'Transmission_Automatic', 'Other'))

if st.button('Submit_Car_Infos'):
    sale_price = predict(Present_Price, Kms_Driven, Owner, YearofMake, Fuel_Type, Seller_Type_Individual, Transmission_Type)
    st.success(f'The Sale Price of the Car : {sale_price[0]:.2f}')
